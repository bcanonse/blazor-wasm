@page "/counter/{currentCounterParameter?}"
@inject ILogger<Counter> Logger

<PageTitle>Counter</PageTitle>

<ModuleTitle Title="Counter"/>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    [Parameter]
    public string? currentCounterParameter { get; set; }

    [SupplyParameterFromQuery]
    [Parameter]
    public string? CounterFromQuery { get; set; }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        Logger.LogInformation("Dentro de SetParametersAsync");

        if (parameters.TryGetValue<string>(nameof(currentCounterParameter), out var value))
        {
            if (value is not null)
                currentCounterParameter = value;
        }


        await base.SetParametersAsync(parameters);
    }

    protected override void OnParametersSet()
    {
        Logger.LogInformation("Se envian los parametros");
    }

    protected override void OnInitialized()
    {
        @* currentCount = currentCounterParameter is not null ? int.Parse(currentCounterParameter) : 0; *@
        currentCount = CounterFromQuery is not null ? int.Parse(CounterFromQuery) : 0;
        Logger.LogInformation("Se inicia el componente");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Logger.LogInformation("Esto ocurre luego de iniciar el componente");
    }

    private void IncrementCount()
    {
        currentCount++;
    }
}
