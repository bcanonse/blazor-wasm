@page "/add-product"
@inject ICategoryService CategoryService
@inject IProductService ProductService
@inject NavigationManager NavigationManager

<PageTitle>Add - Product</PageTitle>

<ModuleTitle Title="Add product" />


<button class="btn btn-dark" @onclick="OnNavigateProductsPage">
    Go back products
</button>
<EditForm Model="@_product" OnSubmit="@OnSubmit">
    <div class="row">
        <div class="col-8 form-group">
            <label for="title" class="col-form-label"> Title</label>

            <InputText id="title" @bind-Value="_product.Title" required class="form-control" />
        </div>
        <div class="col form-group">
            <label for="price" class="col-form-label">Price</label>
            <InputNumber id="price" @bind-Value="_product.Price" min="0" required class="form-control" />
        </div>
    </div>
    <div class="row">
        <div class="col form-group">
            <label for="category" class="col-form-label">Category</label>
            <InputSelect id="category" @bind-Value="_product.CategoryId" required class="form-control">
                <option>Select Category...</option>
                @if (_categories?.Count > 0)
                {
                    @foreach (var category in _categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                }
            </InputSelect>
        </div>
        <div class="col form-group">
            <label for="image" class="col-form-label">Image (Url)</label>
            <InputText id="image" @bind-Value="_product.Image" required class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label for="description" class="col-form-label">Description</label>
        <InputTextArea id="description" @bind-Value="_product.Description" required class="form-control">
        </InputTextArea>
    </div>

    <hr />
    <button class="btn btn-primary" type="submit">Save</button>
</EditForm>

@code {
    private List<Category>? _categories;
    private readonly Product _product = new();

    protected override async Task OnInitializedAsync()
    {
        _categories = await CategoryService.Get() ?? new List<Category>();
    }

    private void OnNavigateProductsPage() => NavigationManager.NavigateTo("/products");

    private async Task OnSubmit()
    {
        _product.Images = new string[1] { _product.Image };

        await ProductService.Add(_product);

        OnNavigateProductsPage();
    }
}